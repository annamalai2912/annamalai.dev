@tailwind base;
@tailwind components;
@tailwind utilities;

@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&family=VT323:wght@400&display=swap');

:root {
  /* Game Boy Theme */
  --gameboy-darkest: #0F380F;
  --gameboy-dark: #306230;
  --gameboy-light: #8BAC0F;
  --gameboy-lightest: #9BBB0C;
  --gameboy-bg: #C7D12B;
  
  /* Terminal Theme */
  --terminal-bg: #000000;
  --terminal-green: #00FF00;
  --terminal-green-dim: #008000;
  --terminal-green-bright: #66FF66;
  
  /* Shared */
  --pixel-size: 2px;
  --crt-glow: 0 0 20px currentColor;
}

@layer base {
  * {
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
  }
  
  body {
    font-family: var(--font-press-start);
    background: var(--gameboy-bg);
    color: var(--gameboy-darkest);
    transition: all 0.3s ease;
  }
  
  body.terminal-theme {
    background: var(--terminal-bg);
    color: var(--terminal-green);
  }
}

@layer components {
  .pixel-font {
    font-family: var(--font-press-start);
  }
  
  .mono-font {
    font-family: var(--font-vt323);
  }
  
  .crt-screen {
    background: radial-gradient(ellipse at center, rgba(0,0,0,0) 0%, rgba(0,0,0,0.2) 100%);
    position: relative;
    overflow: hidden;
  }
  
  .crt-screen::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: repeating-linear-gradient(
      0deg,
      transparent,
      transparent 2px,
      rgba(0, 0, 0, 0.03) 2px,
      rgba(0, 0, 0, 0.03) 4px
    );
    pointer-events: none;
    z-index: 1000;
  }
  
  .terminal-theme .crt-screen::before {
    background: repeating-linear-gradient(
      0deg,
      transparent,
      transparent 2px,
      rgba(0, 255, 0, 0.03) 2px,
      rgba(0, 255, 0, 0.03) 4px
    );
  }
  
  .pixel-border {
    border: 4px solid currentColor;
    border-image: url("data:image/svg+xml,%3csvg width='100' height='100' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='m0,0 L4,0 L4,4 L0,4 z M8,0 L12,0 L12,4 L8,4 z' fill='currentColor'/%3e%3c/svg%3e") 4;
    image-rendering: pixelated;
  }
  
  .glow-text {
    text-shadow: var(--crt-glow);
  }
  
  .terminal-theme .glow-text {
    text-shadow: 0 0 10px var(--terminal-green), 0 0 20px var(--terminal-green);
  }
  
  .pixel-button {
    @apply relative overflow-hidden transition-all duration-150;
    border: 3px solid currentColor;
    background: transparent;
    image-rendering: pixelated;
  }
  
  .pixel-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: currentColor;
    transition: left 0.3s ease;
    z-index: -1;
  }
  
  .pixel-button:hover::before {
    left: 0;
  }
  
  .pixel-button:hover {
    color: var(--gameboy-bg);
  }
  
  .terminal-theme .pixel-button:hover {
    color: var(--terminal-bg);
  }
  
  .ascii-border {
    border: 2px solid currentColor;
    position: relative;
  }
  
  .ascii-border::before {
    content: '┌─────────────────────────────────────┐';
    position: absolute;
    top: -1.2em;
    left: -2px;
    right: -2px;
    font-family: monospace;
    font-size: 0.8em;
    background: inherit;
    padding: 0 4px;
  }
  
  .ascii-border::after {
    content: '└─────────────────────────────────────┘';
    position: absolute;
    bottom: -1.2em;
    left: -2px;
    right: -2px;
    font-family: monospace;
    font-size: 0.8em;
    background: inherit;
    padding: 0 4px;
  }
  
  @keyframes blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
  }
  
  .blink {
    animation: blink 1s infinite;
  }
  
  @keyframes typewriter {
    from { width: 0; }
    to { width: 100%; }
  }
  
  .typewriter {
    overflow: hidden;
    border-right: 2px solid currentColor;
    white-space: nowrap;
    animation: typewriter 3s steps(40, end), blink 1s step-end infinite;
  }
  
  @keyframes glitch {
    0% { transform: translate(0); }
    20% { transform: translate(-2px, 2px); }
    40% { transform: translate(-2px, -2px); }
    60% { transform: translate(2px, 2px); }
    80% { transform: translate(2px, -2px); }
    100% { transform: translate(0); }
  }
  
  .glitch:hover {
    animation: glitch 0.3s ease-in-out;
  }
}

/* Progress Bar Styles */
.skill-bar {
  background: repeating-linear-gradient(
    90deg,
    transparent 0px,
    transparent 8px,
    currentColor 8px,
    currentColor 10px
  );
}

/* Cartridge Styles */
.cartridge {
  background: linear-gradient(135deg, #666 0%, #999 50%, #666 100%);
  border: 3px solid #333;
  position: relative;
}

.cartridge::before {
  content: '';
  position: absolute;
  top: 10px;
  left: 50%;
  transform: translateX(-50%);
  width: 60%;
  height: 8px;
  background: #333;
  border-radius: 4px;
}

.cartridge::after {
  content: '';
  position: absolute;
  bottom: 10px;
  left: 20px;
  right: 20px;
  height: 2px;
  background: #333;
}

/* Terminal specific styles */
.terminal-theme .cartridge {
  background: linear-gradient(135deg, #002200 0%, #004400 50%, #002200 100%);
  border-color: var(--terminal-green);
}

.terminal-theme .cartridge::before,
.terminal-theme .cartridge::after {
  background: var(--terminal-green);
}